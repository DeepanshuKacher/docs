import os
import subprocess
import glob
from datetime import datetime


# Function to run shell commands
def run_command(command):
    process = subprocess.Popen(
        command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE
    )
    out, err = process.communicate()
    if process.returncode != 0:
        print(f"Error: {err}")
    return out.decode().strip()


# Function to generate metadata header
def generate_metadata_header(title, slug):
    current_time = datetime.utcnow().strftime(
        "%a %b %d %Y %H:%M:%S GMT+0000 (Coordinated Universal Time)"
    )
    return f'---\ntitle: "{title}"\nslug: {slug}\nexcerpt: "{title}"\ncategory: "References"\nhidden: false\nmetadata: \n  image: []\n  robots: "index"\ncreatedAt: "{current_time}"\nupdatedAt: "{current_time}"\n---\n\n'


# 1. Check if Git module already exists and add if not
print("Checking for existing Git module...")
module_path = "runpodctl"
if not os.path.exists(module_path):
    print("Adding Git module...")
    run_command("gh repo clone runpod/runpodctl runpodctl")
else:
    print("Git module already exists. Skipping addition.")

# 2. Move Markdown files
print("Moving Markdown files...")
source_dir = "runpodctl/doc/"
target_dir = "v1.0/References/runpodctl/"
os.makedirs(target_dir, exist_ok=True)
for md_file in glob.glob(f"{source_dir}*.md"):
    os.rename(md_file, f"{target_dir}{os.path.basename(md_file)}")

# 3. Update each Markdown file
print("Editing Markdown files...")
for md_file in glob.glob(f"{target_dir}*.md"):
    title = (
        os.path.basename(md_file)
        .replace("runpodctl", "")
        .replace(".md", "")
        .replace("-", " ")
        .replace("_", " ")
        .strip()
        .title()
    )
    if title == "":
        title = "Runpodctl"
    slug = os.path.basename(md_file).replace(".md", "").replace("_", "-")
    with open(md_file, "r") as file:
        lines = file.readlines()
    with open(md_file, "w") as file:
        file.write(generate_metadata_header(title, slug))
        for line in lines:
            if "###### Auto generated by" not in line:
                file.write(line)

# 4. Clean up
print("Cleaning up...")
run_command("rm -rf runpodctl")

print("Script completed.")
